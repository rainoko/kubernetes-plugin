/**
 * Build and test the kubernetes plugin using the plugin itself in a Kubernetes cluster
 *
 * A `jenkins` service account needs to be created using src/main/kubernetes/service-account.yml
 *
 * A PersistentVolumeClaim needs to be created ahead of time with the definition in examples/maven-with-cache-pvc.yml
 *
 * NOTE that typically writable volumes can only be attached to one Pod at a time, so you can't execute
 * two concurrent jobs with this pipeline. Or change readOnly: true after the first run
 */

def label = UUID.randomUUID().toString()

timestamps {

  podTemplate(label: label, yaml: """
apiVersion: v1
kind: Pod
spec:
  serviceAccountName: jenkins
  containers:
  - name: maven
    command:
    - cat
    tty: true
    env:
    - name: MAVEN_OPTS
      value: -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
    - name: BUILD_NUMBER
      value: ${env.BUILD_NUMBER}
    - name: BRANCH_NAME
      value: ${env.BRANCH_NAME}
    - name: _JAVA_OPTIONS
      value: -Xmx300M
    image: maven:3.5.4-jdk-8
    resources:
      limits:
        memory: 1500Mi
      requests:
        cpu: 100m
        memory: 1500Mi
    """) {

    node(label) {
      stage('Checkout') {
        checkout scm
      }
      stage('Package') {
        try {
          container('maven') {
            sh 'mvn -B clean install -Dmaven.test.skip=true'
          }
        } finally {
          archiveArtifacts allowEmptyArchive: true, artifacts: '**/target/*.hpi,**/target/*.jpi'
          findbugs(includePattern:'**/target/findbugsXml.xml')
        }
      }
      stage('Test') {
        try {
          container('maven') {
            sh 'mvn -B test -DconnectorHost=0.0.0.0'
          }
        } finally {
          junit '**/target/surefire-reports/**/*.xml'
        }
      }
    }
  }

}
